// Code generated by protoc-gen-go. DO NOT EDIT.
// source: star/atom/error.proto

package atom

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ErrorCode int32

const (
	ErrorCode_DEFAULT                   ErrorCode = 0
	ErrorCode_ERROR_SMS_RESEND_DENIED   ErrorCode = 10001
	ErrorCode_ERROR_SMS_RESEND_LIMIT    ErrorCode = 10002
	ErrorCode_ERROR_VERIFY_CODE_DIFF    ErrorCode = 10003
	ErrorCode_ERROR_VERIFY_CODE_TIMEOUT ErrorCode = 10004
)

var ErrorCode_name = map[int32]string{
	0:     "DEFAULT",
	10001: "ERROR_SMS_RESEND_DENIED",
	10002: "ERROR_SMS_RESEND_LIMIT",
	10003: "ERROR_VERIFY_CODE_DIFF",
	10004: "ERROR_VERIFY_CODE_TIMEOUT",
}

var ErrorCode_value = map[string]int32{
	"DEFAULT":                   0,
	"ERROR_SMS_RESEND_DENIED":   10001,
	"ERROR_SMS_RESEND_LIMIT":    10002,
	"ERROR_VERIFY_CODE_DIFF":    10003,
	"ERROR_VERIFY_CODE_TIMEOUT": 10004,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_525076ef09938244, []int{0}
}

func init() {
	proto.RegisterEnum("star.atom.error.ErrorCode", ErrorCode_name, ErrorCode_value)
}

func init() { proto.RegisterFile("star/atom/error.proto", fileDescriptor_525076ef09938244) }

var fileDescriptor_525076ef09938244 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x2e, 0x49, 0x2c,
	0xd2, 0x4f, 0x2c, 0xc9, 0xcf, 0xd5, 0x4f, 0x2d, 0x2a, 0xca, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x07, 0x09, 0xeb, 0x81, 0x84, 0xf5, 0xc0, 0xc2, 0x5a, 0x13, 0x18, 0xb9, 0x38,
	0x5d, 0x41, 0x2c, 0xe7, 0xfc, 0x94, 0x54, 0x21, 0x6e, 0x2e, 0x76, 0x17, 0x57, 0x37, 0xc7, 0x50,
	0x9f, 0x10, 0x01, 0x06, 0x21, 0x19, 0x2e, 0x71, 0xd7, 0xa0, 0x20, 0xff, 0xa0, 0xf8, 0x60, 0xdf,
	0xe0, 0xf8, 0x20, 0xd7, 0x60, 0x57, 0x3f, 0x97, 0x78, 0x17, 0x57, 0x3f, 0x4f, 0x57, 0x17, 0x81,
	0x89, 0x7e, 0x42, 0xd2, 0x5c, 0x62, 0x18, 0xb2, 0x3e, 0x9e, 0xbe, 0x9e, 0x21, 0x02, 0x93, 0x90,
	0x24, 0xc3, 0x5c, 0x83, 0x3c, 0xdd, 0x22, 0xe3, 0x9d, 0xfd, 0x5d, 0x5c, 0xe3, 0x5d, 0x3c, 0xdd,
	0xdc, 0x04, 0x26, 0xfb, 0x09, 0xc9, 0x71, 0x49, 0x62, 0x4a, 0x86, 0x78, 0xfa, 0xba, 0xfa, 0x87,
	0x86, 0x08, 0x4c, 0xf1, 0x73, 0x32, 0x8a, 0x32, 0x48, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b,
	0xce, 0xcf, 0xd5, 0xcf, 0x49, 0x2e, 0x49, 0x4d, 0xce, 0xd0, 0x2d, 0x29, 0xd7, 0x4f, 0xcf, 0xcc,
	0xd3, 0x05, 0xfb, 0x42, 0x3f, 0x25, 0xb3, 0xb8, 0x44, 0x3f, 0x3d, 0x5f, 0x1f, 0xee, 0xc7, 0x24,
	0x36, 0xb0, 0x84, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x35, 0xd7, 0x1d, 0x8f, 0xf7, 0x00, 0x00,
	0x00,
}
